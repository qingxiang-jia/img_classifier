l^1 norm: 比较两个图片——两个图片的每个点减去对应的点的差值的绝对值的和（黑白）。
上面的算法不适用于RGB，比较的方法：quad tree，细节越多的地方方块（对应树分支）越多。Terminal nodes 就是 l^1 norm。
Shape (not used in assn2): Lecture on Feb 26, p.6 图像被转换成几个大的blobs，blobs的连接关系可以转换成一个表，然后可以比较不同图片的这个表。Blobs还可以被表达称基本图像，比如color[x,y,M,m,theta]。However this type of algorithm works well only on highly restricted images (medical, warfare)
人脸的处理，we represent faces against average face: how much they vary on e.g. smileness, hair, wrinkle... => simulating meaning by semantic
Video: slideshow [frame, frame, frame, frame, frame, frame, frame, frame, frame, frame, frame, frame, frame] 30 hz 但是大多数时候不需要所有的帧，只需要关键帧。

Now about assn2:
step 0: image format PPM/jpg (openCV ...)
step 1: match image against another image. 1) how many bins 2) black background (you have to make a distinction between foreground and background, otherwise, two images will be similar only because they have the same background)
step 2: how to compare images according to texture（纹理）. 检测是不是光滑：Lapacian: 8*center-sum(neighbors)       smooth(linear) lapacian = 0 (page 7)
step 3: color & texture: user study
step 4: clusters by coefficients: group 40 images, you can make a matrix (images vs. images) and see how close they are and group them. them ask the user to group and see how they react; bell number; you can change your coefficients to see the results.